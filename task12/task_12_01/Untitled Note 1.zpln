{
  "paragraphs": [
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=0",
              "$$hashKey": "object:1125"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=1",
              "$$hashKey": "object:1126"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=2",
              "$$hashKey": "object:1127"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=3",
              "$$hashKey": "object:1128"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=4",
              "$$hashKey": "object:1129"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=5",
              "$$hashKey": "object:1130"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=6",
              "$$hashKey": "object:1131"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=7",
              "$$hashKey": "object:1132"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=8",
              "$$hashKey": "object:1133"
            },
            {
              "jobUrl": "http://92e51bee2822:4040/jobs/job?id=9",
              "$$hashKey": "object:1134"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1699503116608_1485369496",
      "id": "paragraph_1699503116608_1485369496",
      "dateCreated": "2023-11-09T04:11:56+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:585",
      "text": "%pyspark\r\n%matplotlib inline\r\n\r\nfrom pyspark.sql import SparkSession\r\nfrom pyspark.sql.functions import col, count\r\nimport seaborn as sns\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\nspark = SparkSession.builder.appName(\"OlympicsAnalysis\").getOrCreate()\r\n\r\ndf = spark.read.option(\"header\", \"true\").csv(\"/data/data/olympics.csv\")\r\ndf.createOrReplaceTempView(\"olympics_data\")\r\n\r\n# На какой дистанции Jesse Owens выиграл медаль?\r\ncn = \"OWENS, Jesse\"\r\njesse_owens_medal_event = df.filter(col(\"Athlete\") == cn).select(\"Event\").first()[\"Event\"]\r\nprint(f\"Jesse Owens выиграл медаль в событии: {jesse_owens_medal_event}\")\r\n\r\n# Мужчины какой страны взяли большинство золотых медалей в бадминтоне?\r\nsport = \"Badminton\"\r\nbadminton_gold_medals = df.filter((col(\"Sport\") == sport) & (col(\"Medal\") == \"Gold\"))\r\nmost_gold_medals_country = (badminton_gold_medals\r\n                            .filter(col(\"Gender\") == \"Men\")\r\n                            .groupBy(\"NOC\").count()\r\n                            .orderBy(\"count\", ascending=False)\r\n                            .first()[\"NOC\"])\r\nprint(f\"Мужчины из страны {most_gold_medals_country}\")\r\n\r\n# Какие три страны получили наибольшее количество медалей в последние\r\n# годы (с 1984 по 2008)?\r\nprint(\"Топ-3 страны с наибольшим количеством медалей в последние годы:\")\r\nrecent_medals = df.filter((col(\"Edition\").between(1984, 2008)))\r\ntop_countries = (recent_medals\r\n                 .groupBy(\"NOC\").count()\r\n                 .orderBy(\"count\", ascending=False)\r\n                 .limit(3)\r\n                 .select(\"NOC\", \"count\")\r\n                 .show())\r\n\r\n# Найдите мужчин - золотых медалистов по 100m. Выведите город, год, имя атлета\r\n# и страну, за которую он выступал.\r\nprint(\"Мужчины-золотые медалисты по 100m:\")\r\nmen_100m_gold_medalists = (df.filter((col(\"Event\") == \"100m\") & (col(\"Medal\") == \"Gold\") & (col(\"Gender\") == \"Men\"))\r\n                           .select(\"City\", \"Edition\", \"Athlete\", \"NOC\")\r\n                           .orderBy(\"Edition\", ascending=False)\r\n                           .show())\r\n\r\n# Число всех медалей, выигранных на каждой Олимпиаде\r\nmedals_by_year_sql = spark.sql('''\r\n    SELECT Edition, COUNT(*) AS count\r\n    FROM olympics_data\r\n    GROUP BY Edition\r\n    ORDER BY Edition\r\n''')\r\n\r\nmedals_by_year_pd = medals_by_year_sql.toPandas()\r\nmedals_by_year_pd[\"count\"] = medals_by_year_pd[\"count\"].astype(int)\r\n\r\nplt.figure(figsize=(10, 5))\r\nsns.barplot(x=\"Edition\", y=\"count\", data=medals_by_year_pd)\r\nplt.xlabel(\"Год Олимпиады\")\r\nplt.ylabel(\"Количество медалей\")\r\nplt.title(\"Число всех медалей по годам\")\r\nplt.show()\r\n\r\n# Статистика медалей по странам\r\nmedals_by_country = spark.sql('''\r\n    SELECT NOC, COUNT(*) AS `Total Medals`, MIN(Edition) AS `First Year`, MAX(Edition) AS `Last Year`\r\n    FROM olympics_data\r\n    WHERE Medal IS NOT NULL\r\n    GROUP BY NOC\r\n    ORDER BY `Total Medals` DESC\r\n''')\r\nprint(\"Статистика медалей по странам:\")\r\nmedals_by_country.show()\r\n\r\n# Золотые медали по полу в атлетике\r\nusa_athletics = spark.sql('''\r\n    SELECT Gender, COUNT(*) AS count\r\n    FROM olympics_data\r\n    WHERE NOC = 'USA' AND Sport = 'Athletics' AND Medal = 'Gold'\r\n    GROUP BY Gender\r\n''').toPandas()\r\n\r\nsns.barplot(x=\"Gender\", y=\"count\", data=usa_athletics)\r\nplt.xlabel(\"Пол\")\r\nplt.ylabel(\"Количество золотых медалей\")\r\nplt.title(\"Золотые медали в атлетике для мужчин и женщин из США\")\r\nplt.show()\r\n\r\n# Топ-атлеты США по годам\r\nusa_athletes_by_year = spark.sql('''\r\n    SELECT Edition, FIRST(Athlete) AS Athlete, FIRST(Discipline) AS Discipline, MAX(count) AS `Total Medals`\r\n    FROM (\r\n        SELECT Edition, Athlete, Discipline, COUNT(*) AS count\r\n        FROM olympics_data\r\n        WHERE NOC = 'USA'\r\n        GROUP BY Edition, Athlete, Discipline\r\n    )\r\n    GROUP BY Edition\r\n    ORDER BY Edition\r\n''')\r\nprint(\"Топ-атлеты США по годам:\")\r\nusa_athletes_by_year.show()\r\n",
      "dateUpdated": "2023-11-09T04:12:05+0000",
      "dateFinished": "2023-11-09T04:12:30+0000",
      "dateStarted": "2023-11-09T04:12:05+0000",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Jesse Owens выиграл медаль в событии: 100m\nМужчины из страны INA\nТоп-3 страны с наибольшим количеством медалей в последние годы:\n+---+-----+\n|NOC|count|\n+---+-----+\n|USA| 1837|\n|AUS|  762|\n|GER|  691|\n+---+-----+\n\nМужчины-золотые медалисты по 100m:\n+--------------------+-------+--------------------+---+\n|                City|Edition|             Athlete|NOC|\n+--------------------+-------+--------------------+---+\n|             Beijing|   2008|         BOLT, Usain|JAM|\n|              Athens|   2004|      GATLIN, Justin|USA|\n|              Sydney|   2000|     GREENE, Maurice|USA|\n|             Atlanta|   1996|     BAILEY, Donovan|CAN|\n|           Barcelona|   1992|   CHRISTIE, Linford|GBR|\n|               Seoul|   1988|         LEWIS, Carl|USA|\n|         Los Angeles|   1984|         LEWIS, Carl|USA|\n|              Moscow|   1980|        WELLS, Allan|GBR|\n|            Montreal|   1976|    CRAWFORD, Hasely|TRI|\n|              Munich|   1972|      BORZOV, Valery|URS|\n|              Mexico|   1968|    HINES, James Ray|USA|\n|               Tokyo|   1964|       HAYES, Robert|USA|\n|                Rome|   1960|         HARY, Armin|EUA|\n|Melbourne / Stock...|   1956|MORROW, Robert Jo...|USA|\n|            Helsinki|   1952|     REMIGINO, Lindy|USA|\n|              London|   1948|   DILLARD, Harrison|USA|\n|              Berlin|   1936|        OWENS, Jesse|USA|\n|         Los Angeles|   1932|        TOLAN, Eddie|USA|\n|           Amsterdam|   1928|     WILLIAMS, Percy|CAN|\n|               Paris|   1924|    ABRAHAMS, Harold|GBR|\n+--------------------+-------+--------------------+---+\nonly showing top 20 rows\n\n\n"
          },
          {
            "type": "IMG",
            "data": "\n"
          },
          {
            "type": "TEXT",
            "data": "Статистика медалей по странам:\n+---+------------+----------+---------+\n|NOC|Total Medals|First Year|Last Year|\n+---+------------+----------+---------+\n|USA|        4335|      1896|     2008|\n|URS|        2049|      1952|     1988|\n|GBR|        1594|      1896|     2008|\n|FRA|        1314|      1896|     2008|\n|ITA|        1228|      1900|     2008|\n|GER|        1211|      1896|     2008|\n|AUS|        1075|      1896|     2008|\n|HUN|        1053|      1896|     2008|\n|SWE|        1021|      1900|     2008|\n|GDR|         825|      1968|     1988|\n|NED|         782|      1900|     2008|\n|JPN|         704|      1920|     2008|\n|CHN|         679|      1984|     2008|\n|RUS|         638|      1996|     2008|\n|ROU|         624|      1924|     2008|\n|CAN|         592|      1900|     2008|\n|NOR|         537|      1900|     2008|\n|POL|         499|      1924|     2008|\n|DEN|         491|      1896|     2008|\n|FRG|         490|      1968|     1988|\n+---+------------+----------+---------+\nonly showing top 20 rows\n\n\n"
          },
          {
            "type": "IMG",
            "data": "\n"
          },
          {
            "type": "TEXT",
            "data": "Топ-атлеты США по годам:\n+-------+--------------------+-------------+------------+\n|Edition|             Athlete|   Discipline|Total Medals|\n+-------+--------------------+-------------+------------+\n|   1896|    JAMISON, Herbert|    Athletics|           4|\n|   1900|           EWRY, Ray|    Athletics|           5|\n|   1904|          JOHNSON, -|     Football|           6|\n|   1908|HAMILTON, William...|    Athletics|           3|\n|   1912|       TABER, Norman|    Athletics|           4|\n|   1920|      BARRON, Harold|    Athletics|           7|\n|   1924|VALENTINE, Alan C...|        Rugby|           3|\n|   1928| ROBINSON, Elizabeth|    Athletics|           2|\n|   1932|CHAMBERLIN, Harry...|      Jumping|           3|\n|   1936| ADAM, Gordon Belgum|       Rowing|           4|\n|   1948|BOURLAND, Cliffor...|    Athletics|           3|\n|   1952|SANDERS, Hayes Ed...|       Boxing|           3|\n|   1956|       BERGER, Isaac|Weightlifting|           3|\n|   1960|   WEST, Jeremy Alan|   Basketball|           4|\n|   1964|SCHMIDT, Frederic...|     Swimming|           4|\n|   1968|   NETTER, Mildrette|    Athletics|           4|\n|   1972|LINCOLN, Craig Ho...|       Diving|           7|\n|   1976|        MOSES, Edwin|    Athletics|           5|\n|   1984|     FOX, Ruby Ellen|     Shooting|           5|\n|   1988|CTVRTLIK, Robert Jan|   Volleyball|           7|\n+-------+--------------------+-------------+------------+\nonly showing top 20 rows\n\n"
          }
        ]
      }
    },
    {
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2023-11-09T04:12:05+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1699503125499_1455000691",
      "id": "paragraph_1699503125499_1455000691",
      "dateCreated": "2023-11-09T04:12:05+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:680"
    }
  ],
  "name": "Untitled Note 1",
  "id": "2JEC9PSPN",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Untitled Note 1"
}